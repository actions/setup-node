name: versions

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - master
      - releases/*
    paths-ignore:
      - '**.md'

jobs:
  versions:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      # test version that falls through to node dist
      - name: Setup node 11 from dist
        uses: ./
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - if: runner.os != 'Windows'
        name: Verify node and npm
        run: |
          . "$NVM_DIR/nvm.sh"
          [[ $(nvm version-remote "${{ matrix.node-version }}") =~ ^v([^.]+) ]]
          __tests__/verify-node.sh "${BASH_REMATCH[1]}"
        shell: bash

  v8-canary-syntax:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version:
          [
            '20-v8-canary',
            '20.0.0-v8-canary',
            '20.0.0-v8-canary20221101e50e45c9f8'
          ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: ./
        with:
          node-version: ${{ matrix.node-version }}
      - name: Verify node and npm
        run: __tests__/verify-node.sh 11
      # test old versions which didn't have npm and layout different
      - name: Setup node 0.12.18 from dist
        uses: ./
        with:
          node-version: 0.12.18
      - name: Verify node
        shell: bash
        run: __tests__/verify-node.sh 0.12.18 SKIP_NPM
      # test version from node manifest
      - name: Setup node 12.16.2 from manifest
        uses: ./
        with:
          node-version: 12.16.2
      - name: Verify node and npm
        run: __tests__/verify-node.sh 12
